{
	"name": "Mapping dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "mockdata",
						"type": "DatasetReference"
					},
					"name": "mockdata",
					"description": "Mock dataset in ADLSGen2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable1",
						"type": "DatasetReference"
					},
					"name": "SynapseAnalytics",
					"description": "Sink SynapseAnalytics"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "genderFilter"
				},
				{
					"name": "derivedBooleanColumn"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> mockdata",
				"mockdata select(mapColumn(",
				"          Column_1,",
				"          Column_2,",
				"          Column_3,",
				"          Column_4,",
				"          Column_5,",
				"          network_address = Column_6",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(equalsIgnoreCase(Column_5, 'female')) ~> genderFilter",
				"genderFilter derive(LessThan50 = iif(lesserOrEqual(toInteger(Column_1), 50), true(), false())) ~> derivedBooleanColumn",
				"derivedBooleanColumn alterRow(upsertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['Column_1'],",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SynapseAnalytics"
			]
		}
	}
}